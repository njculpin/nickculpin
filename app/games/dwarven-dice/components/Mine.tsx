/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 mine.glb -o Mine.tsx -r public -k 
*/

import * as THREE from "three";
import React from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Cube008: THREE.Mesh;
    Cylinder004: THREE.Mesh;
    Cylinder006: THREE.Mesh;
    Cylinder007: THREE.Mesh;
    Cylinder012: THREE.Mesh;
    Cylinder013: THREE.Mesh;
    Cylinder018: THREE.Mesh;
    Cylinder019: THREE.Mesh;
    Cube014: THREE.Mesh;
    Cube020: THREE.Mesh;
    Cube025: THREE.Mesh;
    Plane002: THREE.Mesh;
  };
  materials: {
    Wood: THREE.MeshStandardMaterial;
    GREENS: THREE.MeshStandardMaterial;
    mETAL: THREE.MeshStandardMaterial;
    stone: THREE.MeshStandardMaterial;
    Black: THREE.MeshStandardMaterial;
  };
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export function Mine(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/../mine.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        name="Cube008"
        geometry={nodes.Cube008.geometry}
        material={materials.Wood}
        position={[0, 3.374, -7.317]}
        rotation={[2.964, 0, -Math.PI]}
        scale={[-2.349, -0.235, -0.637]}
      />
      <mesh
        name="Cylinder004"
        geometry={nodes.Cylinder004.geometry}
        material={materials.Wood}
        position={[1.616, 0.773, -6.911]}
        scale={[1.577, 0.781, 1.577]}
      />
      <mesh
        name="Cylinder006"
        geometry={nodes.Cylinder006.geometry}
        material={materials.Wood}
        position={[8.542, 0.773, -6.495]}
        scale={[1.577, 0.781, 1.577]}
      />
      <mesh
        name="Cylinder007"
        geometry={nodes.Cylinder007.geometry}
        material={materials.GREENS}
        position={[8.596, 2.327, -6.504]}
        scale={[6.183, 1.162, 6.183]}
      />
      <mesh
        name="Cylinder012"
        geometry={nodes.Cylinder012.geometry}
        material={materials.GREENS}
        position={[-6.756, 1.449, -4.086]}
        rotation={[Math.PI, -0.801, Math.PI]}
        scale={[4.093, 0.769, 4.093]}
      />
      <mesh
        name="Cylinder013"
        geometry={nodes.Cylinder013.geometry}
        material={materials.Wood}
        position={[-6.735, 0.42, -4.115]}
        rotation={[Math.PI, -0.801, Math.PI]}
        scale={[1.044, 0.517, 1.044]}
      />
      <mesh
        name="Cylinder018"
        geometry={nodes.Cylinder018.geometry}
        material={materials.Wood}
        position={[2.997, 0.225, -14.406]}
        rotation={[-Math.PI, 1.165, -Math.PI]}
        scale={[1.341, 0.359, 1.341]}
      />
      <mesh
        name="Cylinder019"
        geometry={nodes.Cylinder019.geometry}
        material={materials.GREENS}
        position={[2.972, 1.696, -14.446]}
        rotation={[-Math.PI, 1.165, -Math.PI]}
        scale={[5.258, 0.988, 5.258]}
      />
      <mesh
        name="Cube014"
        geometry={nodes.Cube014.geometry}
        material={materials.mETAL}
        position={[-0.857, 0.233, -4.943]}
        scale={[0.133, 0.156, 3.454]}
      />
      <mesh
        name="Cube020"
        geometry={nodes.Cube020.geometry}
        material={materials.Wood}
        position={[0, -0.001, -7.286]}
        scale={[1.211, 0.085, 0.411]}
      />
      <mesh
        name="Cube025"
        geometry={nodes.Cube025.geometry}
        material={materials.stone}
        position={[2.631, 3.12, -5.406]}
        rotation={[0.936, 0.091, 0.445]}
        scale={[0.181, 0.239, 0.194]}
      />
      <mesh
        name="Plane002"
        geometry={nodes.Plane002.geometry}
        material={materials.Black}
        position={[0.065, 1.436, -8.075]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[1.298, 1.471, 1.471]}
      />
    </group>
  );
}

useGLTF.preload("/../mine.glb");
